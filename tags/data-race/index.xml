<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data Race - Enna1's website</title><link>https://enna1.github.io/tags/data-race/</link><description>Recent content in Data Race on Enna1's website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 22 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://enna1.github.io/tags/data-race/index.xml" rel="self" type="application/rss+xml"/><item><title>A Tree Clock Data Structure for Causal Orderings in Concurrent Executions</title><link>https://enna1.github.io/post/treeclock_asplos22/</link><pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate><guid>https://enna1.github.io/post/treeclock_asplos22/</guid><description>&lt;p>本文是对 &lt;a href="https://dl.acm.org/doi/pdf/10.1145/3503222.3507734">A Tree Clock Data Structure for Causal Orderings in Concurrent Executions (ASPLOS’22)&lt;/a> 这篇论文的学习笔记。&lt;/p>
&lt;p>个人感觉这篇文章非常精妙，提出了 tree clock 这种数据结构来替代目前 Data Race 检测算法中广泛使用的数据结构 vector clock，极大的改善了计算 happen-before 关系时的时间复杂度。&lt;/p></description></item><item><title>FastTrack: efficient and precise dynamic race detection</title><link>https://enna1.github.io/post/fasttrack_pldi09/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><guid>https://enna1.github.io/post/fasttrack_pldi09/</guid><description>&lt;p>根据 &lt;a href="http://goo.gl/FPVd8">AddressSanitizer, ThreadSanitizer, and MemorySanitizer: Dynamic Testing Tools for C++ (GTAC'2013)&lt;/a>，TSan V2 使用的 fast happens-before 算法，&lt;strong>类似&lt;/strong>于 FastTrack(PLDI'09) 中提出的算法。&lt;/p>
&lt;p>本文是对 &lt;a href="https://users.soe.ucsc.edu/~cormac/papers/pldi09.pdf">FastTrack: efficient and precise dynamic race detection (PLDI'09)&lt;/a> 这篇论文的学习笔记。&lt;/p></description></item></channel></rss>